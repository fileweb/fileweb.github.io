proc sendPingPacket {} {
         global ns ping0 ping4
         set intervalTime 0.001			        
         set now [$ns now]
         $ns at [expr $now + $intervalTime] "$ping0 send"
         $ns at [expr $now + $intervalTime] "$ping4 send"
         $ns at [expr $now + $intervalTime] "sendPingPacket"
}

proc finish {} {
    global f nf ns
    $ns flush-trace
    close $f
    close $nf
    exec nam 1.nam &
    exec echo "The number of packet drops is " &
    exec grep -c "^d" 1.tr &	
    exit 0
}


set ns [new Simulator]

set f [open 2.tr w]
$ns trace-all $f

set nf [open 2.nam w]
$ns namtrace-all $nf

$ns color 1 Blue
$ns color 2 Red

set n0 [$ns node]
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]
set n4 [$ns node]
set n5 [$ns node]

$ns duplex-link  $n0 $n2 1Mb 10ms DropTail
$ns duplex-link  $n1 $n2 1Mb 10ms DropTail
$ns duplex-link  $n2 $n3 0.5Mb 30ms DropTail
$ns duplex-link  $n3 $n4 1Mb 10ms DropTail
$ns duplex-link  $n3 $n5 1Mb 10ms DropTail

set ping0 [new Agent/Ping]
$ping0 set class_ 1
$ns attach-agent $n0 $ping0

set ping4 [new Agent/Ping]
$ping4 set class_ 2
$ns attach-agent $n4 $ping4

$ns connect $ping0 $ping4


Agent/Ping instproc recv {from rtt} {
    # $self instvar node_
}

$ns at 0.01 "sendPingPacket"
$ns at 10.0 "finish"
$ns run